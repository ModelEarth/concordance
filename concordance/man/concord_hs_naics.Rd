% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hs_naics.R
\name{concord_hs_naics}
\alias{concord_hs_naics}
\title{Converting HS and NAICS Codes}
\usage{
concord_hs_naics(sourcevar, origin, destination, dest.digit = 6,
  all = FALSE)
}
\arguments{
\item{sourcevar}{An input character vector of HS or NAICS codes. The function accepts 2, 4, 6, 10-digit codes for HS; 2, 4, 6-digit codes for HS0, HS1, HS2, HS3, HS4 codes; 2, 4, 6-digit codes for NAICS.}

\item{origin}{A string setting the input industry classification: "HS" (HS combined), "HS0", "HS1", "HS2", "HS3", "HS4", "NAICS" (NAICS combined).}

\item{destination}{A string setting the output industry classification: "HS" (HS combined), "HS0", "HS1", "HS2", "HS3", "HS4", "NAICS" (NAICS combined).}

\item{dest.digit}{An integer indicating the preferred number of digits for output codes. Allows 2, 4, 6, or 10 digits for HS; 2, 4, or 6 digits for HS0, HS1, HS2, HS3, HS4 codes; 2, 4, or 6 digits for NAICS. The default is 6 digits.}

\item{all}{Either TRUE or FALSE. If TRUE, the function will return (1) all matched outputs for each input, and (2) the share of occurrences for each matched output among all matched outputs. Users can use the shares as weights for more precise concordances. If FALSE, the function will only return the matched output with the largest share of occurrences (the mode match). If the mode consists of multiple matches, the function will return the first matched output.}
}
\value{
The matched output(s) for each element of the input vector. Either a list object when all = TRUE or a character vector when all = FALSE.
}
\description{
\code{concord_hs_naics} converts HS codes (HS, HS0, HS1, HS2, HS3, HS4) to and from NAICS (combined) codes.
}
\examples{
## HS combined to NAICS
# one input: one-to-one match
concord_hs_naics(sourcevar = "1206000069", origin = "HS", destination = "NAICS", all = FALSE)
concord_hs_naics(sourcevar = "1206000069", origin = "HS", destination = "NAICS", all = TRUE)

# two inputs: multiple-to-one match
concord_hs_naics(sourcevar = c("1206000069", "1206000061"), origin = "HS", destination = "NAICS", all = FALSE)
concord_hs_naics(sourcevar = c("1206000069", "1206000061"), origin = "HS", destination = "NAICS", all = TRUE)

# two inputs: repeated
concord_hs_naics(sourcevar = c("1206000069", "1206000069"), origin = "HS", destination = "NAICS", all = FALSE)

# one to multiple matches
concord_hs_naics(sourcevar = c("1206000069", "8546900000"), origin = "HS", destination = "NAICS", all = TRUE)

# sourcevar has different number of digits, gives an error
concord_hs_naics(sourcevar = c("1206000069", "120600006"), origin = "HS", destination = "NAICS", all = FALSE)

# sourcevar includes NA, gives error
concord_hs_naics(sourcevar = c("1206000069", "8546900000", NA), origin = "HS", destination = "NAICS", all = FALSE)

# if no match, will return NA
concord_hs_naics(sourcevar = c("1206000069", "1206000062"), origin = "HS", destination = "NAICS", all = FALSE)

# 7-digit HS inputs not supported and will give an error
concord_hs_naics(sourcevar = c("1206000", "8546900"), origin = "HS", destination = "NAICS", all = TRUE)

# 4-digit inputs
concord_hs_naics(sourcevar = c("1206", "8546"), origin = "HS", destination = "NAICS", all = TRUE)

# 4-digit outputs
concord_hs_naics(sourcevar = c("1206000069", "8546900000"), origin = "HS", destination = "NAICS", dest.digit = 4, all = TRUE)

## HS0 to NAICS
concord_hs_naics(sourcevar = c("1206", "8546"), origin = "HS0", destination = "NAICS", all = TRUE)
concord_hs_naics(sourcevar = c("120600", "854690"), origin = "HS0", destination = "NAICS", dest.digit = 4, all = TRUE)

## HS1 to NAICS
concord_hs_naics(sourcevar = c("1206", "8546"), origin = "HS1", destination = "NAICS", all = TRUE)
concord_hs_naics(sourcevar = c("120600", "854690"), origin = "HS1", destination = "NAICS", dest.digit = 4, all = TRUE)

## HS2 to NAICS
concord_hs_naics(sourcevar = c("1206", "8546"), origin = "HS2", destination = "NAICS", all = TRUE)
concord_hs_naics(sourcevar = c("120600", "854690"), origin = "HS2", destination = "NAICS", dest.digit = 4, all = TRUE)

## HS3 to NAICS
concord_hs_naics(sourcevar = c("1206", "8546"), origin = "HS3", destination = "NAICS", all = TRUE)
concord_hs_naics(sourcevar = c("120600", "854690"), origin = "HS3", destination = "NAICS", dest.digit = 4, all = TRUE)

## HS4 to NAICS
concord_hs_naics(sourcevar = c("1206", "8546"), origin = "HS4", destination = "NAICS", all = TRUE)
concord_hs_naics(sourcevar = c("120600", "854690"), origin = "HS4", destination = "NAICS", dest.digit = 4, all = TRUE)

## NAICS to HS
concord_hs_naics(sourcevar = c("1111", "3271"), origin = "NAICS", destination = "HS", all = TRUE)
concord_hs_naics(sourcevar = c("111120", "326199"), origin = "NAICS", destination = "HS", dest.digit = 4, all = TRUE)

## NAICS to HS0
concord_hs_naics(sourcevar = c("1111", "3271"), origin = "NAICS", destination = "HS0", all = FALSE)
concord_hs_naics(sourcevar = c("111120", "326199"), origin = "NAICS", destination = "HS0", dest.digit = 4, all = TRUE)

## NAICS to HS1
concord_hs_naics(sourcevar = c("1111", "3271"), origin = "NAICS", destination = "HS1", all = FALSE)
concord_hs_naics(sourcevar = c("111120", "326199"), origin = "NAICS", destination = "HS1", dest.digit = 4, all = TRUE)

## NAICS to HS2
concord_hs_naics(sourcevar = c("1111", "3271"), origin = "NAICS", destination = "HS2", all = FALSE)
concord_hs_naics(sourcevar = c("111120", "326199"), origin = "NAICS", destination = "HS2", dest.digit = 4, all = TRUE)

## NAICS to HS3
concord_hs_naics(sourcevar = c("1111", "3271"), origin = "NAICS", destination = "HS3", all = FALSE)
concord_hs_naics(sourcevar = c("111120", "326199"), origin = "NAICS", destination = "HS3", dest.digit = 4, all = TRUE)

## NAICS to HS4
concord_hs_naics(sourcevar = c("1111", "3271"), origin = "NAICS", destination = "HS4", all = FALSE)
concord_hs_naics(sourcevar = c("111120", "326199"), origin = "NAICS", destination = "HS4", dest.digit = 4, all = TRUE)
}
